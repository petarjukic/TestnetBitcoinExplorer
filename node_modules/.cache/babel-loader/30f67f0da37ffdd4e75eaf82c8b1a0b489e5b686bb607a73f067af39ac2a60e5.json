{"ast":null,"code":"var fs = require('fs'),\n  path = require('path');\nmodule.exports = ncp;\nncp.ncp = ncp;\nfunction ncp(source, dest, options, callback) {\n  var cback = callback;\n  if (!callback) {\n    cback = options;\n    options = {};\n  }\n  var basePath = process.cwd(),\n    currentPath = path.resolve(basePath, source),\n    targetPath = path.resolve(basePath, dest),\n    filter = options.filter,\n    rename = options.rename,\n    transform = options.transform,\n    clobber = options.clobber !== false,\n    modified = options.modified,\n    dereference = options.dereference,\n    errs = null,\n    started = 0,\n    finished = 0,\n    running = 0,\n    limit = options.limit || ncp.limit || 16;\n  limit = limit < 1 ? 1 : limit > 512 ? 512 : limit;\n  startCopy(currentPath);\n  function startCopy(source) {\n    started++;\n    if (filter) {\n      if (filter instanceof RegExp) {\n        if (!filter.test(source)) {\n          return cb(true);\n        }\n      } else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return cb(true);\n        }\n      }\n    }\n    return getStats(source);\n  }\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n    if (running >= limit) {\n      return setImmediate(function () {\n        getStats(source);\n      });\n    }\n    running++;\n    stat(source, function (err, stats) {\n      var item = {};\n      if (err) {\n        return onError(err);\n      }\n\n      // We need to get the mode from the stats object and preserve it.\n      item.name = source;\n      item.mode = stats.mode;\n      item.mtime = stats.mtime; //modified time\n      item.atime = stats.atime; //access time\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      } else if (stats.isFile()) {\n        return onFile(item);\n      } else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source);\n      }\n    });\n  }\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath);\n    if (rename) {\n      target = rename(target);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return copyFile(file, target);\n      }\n      if (clobber) {\n        rmFile(target, function () {\n          copyFile(file, target);\n        });\n      }\n      if (modified) {\n        var stat = dereference ? fs.stat : fs.lstat;\n        stat(target, function (err, stats) {\n          //if souce modified time greater to target modified time copy file\n          if (file.mtime.getTime() > stats.mtime.getTime()) copyFile(file, target);else return cb();\n        });\n      } else {\n        return cb();\n      }\n    });\n  }\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name),\n      writeStream = fs.createWriteStream(target, {\n        mode: file.mode\n      });\n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n    if (transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function () {\n        readStream.pipe(writeStream);\n      });\n    }\n    writeStream.once('finish', function () {\n      if (modified) {\n        //target file modified date sync.\n        fs.utimesSync(target, file.atime, file.mtime);\n        cb();\n      } else cb();\n    });\n  }\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return done();\n    });\n  }\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath);\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n      copyDir(dir.name);\n    });\n  }\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      copyDir(dir.name);\n    });\n  }\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) {\n        return onError(err);\n      }\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return cb();\n    });\n  }\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) {\n        return onError(err);\n      }\n      checkLink(resolvedPath, target);\n    });\n  }\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) {\n          return onError(err);\n        }\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n        if (targetDest === resolvedPath) {\n          return cb();\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return cb();\n    });\n  }\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n      return done(false);\n    });\n  }\n  function onError(err) {\n    if (options.stopOnError) {\n      return cback(err);\n    } else if (!errs && options.errs) {\n      errs = fs.createWriteStream(options.errs);\n    } else if (!errs) {\n      errs = [];\n    }\n    if (typeof errs.write === 'undefined') {\n      errs.push(err);\n    } else {\n      errs.write(err.stack + '\\n\\n');\n    }\n    return cb();\n  }\n  function cb(skipped) {\n    if (!skipped) running--;\n    finished++;\n    if (started === finished && running === 0) {\n      if (cback !== undefined) {\n        return errs ? cback(errs) : cback(null);\n      }\n    }\n  }\n}","map":{"version":3,"names":["fs","require","path","module","exports","ncp","source","dest","options","callback","cback","basePath","process","cwd","currentPath","resolve","targetPath","filter","rename","transform","clobber","modified","dereference","errs","started","finished","running","limit","startCopy","RegExp","test","cb","getStats","stat","lstat","setImmediate","err","stats","item","onError","name","mode","mtime","atime","isDirectory","onDir","isFile","onFile","isSymbolicLink","onLink","file","target","replace","isWritable","writable","copyFile","rmFile","getTime","readStream","createReadStream","writeStream","createWriteStream","on","pipe","once","utimesSync","done","unlink","dir","mkDir","copyDir","mkdir","readdir","items","forEach","join","link","readlink","resolvedPath","checkLink","makeLink","targetDest","linkPath","symlink","code","stopOnError","write","push","stack","skipped","undefined"],"sources":["/Users/petarjukic/Documents/Kriptovalute/Projekt/BlockExplorer/block_explorer/node_modules/ncp/lib/ncp.js"],"sourcesContent":["var fs = require('fs'),\n    path = require('path');\n\nmodule.exports = ncp;\nncp.ncp = ncp;\n\nfunction ncp (source, dest, options, callback) {\n  var cback = callback;\n\n  if (!callback) {\n    cback = options;\n    options = {};\n  }\n\n  var basePath = process.cwd(),\n      currentPath = path.resolve(basePath, source),\n      targetPath = path.resolve(basePath, dest),\n      filter = options.filter,\n      rename = options.rename,\n      transform = options.transform,\n      clobber = options.clobber !== false,\n      modified = options.modified,\n      dereference = options.dereference,\n      errs = null,\n      started = 0,\n      finished = 0,\n      running = 0,\n      limit = options.limit || ncp.limit || 16;\n\n  limit = (limit < 1) ? 1 : (limit > 512) ? 512 : limit;\n\n  startCopy(currentPath);\n  \n  function startCopy(source) {\n    started++;\n    if (filter) {\n      if (filter instanceof RegExp) {\n        if (!filter.test(source)) {\n          return cb(true);\n        }\n      }\n      else if (typeof filter === 'function') {\n        if (!filter(source)) {\n          return cb(true);\n        }\n      }\n    }\n    return getStats(source);\n  }\n\n  function getStats(source) {\n    var stat = dereference ? fs.stat : fs.lstat;\n    if (running >= limit) {\n      return setImmediate(function () {\n        getStats(source);\n      });\n    }\n    running++;\n    stat(source, function (err, stats) {\n      var item = {};\n      if (err) {\n        return onError(err);\n      }\n\n      // We need to get the mode from the stats object and preserve it.\n      item.name = source;\n      item.mode = stats.mode;\n      item.mtime = stats.mtime; //modified time\n      item.atime = stats.atime; //access time\n\n      if (stats.isDirectory()) {\n        return onDir(item);\n      }\n      else if (stats.isFile()) {\n        return onFile(item);\n      }\n      else if (stats.isSymbolicLink()) {\n        // Symlinks don't really need to know about the mode.\n        return onLink(source);\n      }\n    });\n  }\n\n  function onFile(file) {\n    var target = file.name.replace(currentPath, targetPath);\n    if(rename) {\n      target =  rename(target);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return copyFile(file, target);\n      }\n      if(clobber) {\n        rmFile(target, function () {\n          copyFile(file, target);\n        });\n      }\n      if (modified) {\n        var stat = dereference ? fs.stat : fs.lstat;\n        stat(target, function(err, stats) {\n            //if souce modified time greater to target modified time copy file\n            if (file.mtime.getTime()>stats.mtime.getTime())\n                copyFile(file, target);\n            else return cb();\n        });\n      }\n      else {\n        return cb();\n      }\n    });\n  }\n\n  function copyFile(file, target) {\n    var readStream = fs.createReadStream(file.name),\n        writeStream = fs.createWriteStream(target, { mode: file.mode });\n    \n    readStream.on('error', onError);\n    writeStream.on('error', onError);\n    \n    if(transform) {\n      transform(readStream, writeStream, file);\n    } else {\n      writeStream.on('open', function() {\n        readStream.pipe(writeStream);\n      });\n    }\n    writeStream.once('finish', function() {\n        if (modified) {\n            //target file modified date sync.\n            fs.utimesSync(target, file.atime, file.mtime);\n            cb();\n        }\n        else cb();\n    });\n  }\n\n  function rmFile(file, done) {\n    fs.unlink(file, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return done();\n    });\n  }\n\n  function onDir(dir) {\n    var target = dir.name.replace(currentPath, targetPath);\n    isWritable(target, function (writable) {\n      if (writable) {\n        return mkDir(dir, target);\n      }\n      copyDir(dir.name);\n    });\n  }\n\n  function mkDir(dir, target) {\n    fs.mkdir(target, dir.mode, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      copyDir(dir.name);\n    });\n  }\n\n  function copyDir(dir) {\n    fs.readdir(dir, function (err, items) {\n      if (err) {\n        return onError(err);\n      }\n      items.forEach(function (item) {\n        startCopy(path.join(dir, item));\n      });\n      return cb();\n    });\n  }\n\n  function onLink(link) {\n    var target = link.replace(currentPath, targetPath);\n    fs.readlink(link, function (err, resolvedPath) {\n      if (err) {\n        return onError(err);\n      }\n      checkLink(resolvedPath, target);\n    });\n  }\n\n  function checkLink(resolvedPath, target) {\n    if (dereference) {\n      resolvedPath = path.resolve(basePath, resolvedPath);\n    }\n    isWritable(target, function (writable) {\n      if (writable) {\n        return makeLink(resolvedPath, target);\n      }\n      fs.readlink(target, function (err, targetDest) {\n        if (err) {\n          return onError(err);\n        }\n        if (dereference) {\n          targetDest = path.resolve(basePath, targetDest);\n        }\n        if (targetDest === resolvedPath) {\n          return cb();\n        }\n        return rmFile(target, function () {\n          makeLink(resolvedPath, target);\n        });\n      });\n    });\n  }\n\n  function makeLink(linkPath, target) {\n    fs.symlink(linkPath, target, function (err) {\n      if (err) {\n        return onError(err);\n      }\n      return cb();\n    });\n  }\n\n  function isWritable(path, done) {\n    fs.lstat(path, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') return done(true);\n        return done(false);\n      }\n      return done(false);\n    });\n  }\n\n  function onError(err) {\n    if (options.stopOnError) {\n      return cback(err);\n    }\n    else if (!errs && options.errs) {\n      errs = fs.createWriteStream(options.errs);\n    }\n    else if (!errs) {\n      errs = [];\n    }\n    if (typeof errs.write === 'undefined') {\n      errs.push(err);\n    }\n    else { \n      errs.write(err.stack + '\\n\\n');\n    }\n    return cb();\n  }\n\n  function cb(skipped) {\n    if (!skipped) running--;\n    finished++;\n    if ((started === finished) && (running === 0)) {\n      if (cback !== undefined ) {\n        return errs ? cback(errs) : cback(null);\n      }\n    }\n  }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}