{"ast":null,"code":"var has = Object.hasOwnProperty;\nvar proto = Object.getPrototypeOf;\nvar trace = Error.captureStackTrace;\nmodule.exports = StandardError;\nfunction StandardError(msg, props) {\n  // Let all properties be enumerable for easier serialization.\n  if (msg && typeof msg == \"object\") props = msg, msg = undefined;else this.message = msg;\n\n  // Name has to be an own property (or on the prototype a single step up) for\n  // the stack to be printed with the correct name.\n  if (props) for (var key in props) this[key] = props[key];\n  if (!has.call(this, \"name\")) this.name = has.call(proto(this), \"name\") ? this.name : this.constructor.name;\n  if (trace && !(\"stack\" in this)) trace(this, this.constructor);\n}\nStandardError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: StandardError,\n    configurable: true,\n    writable: true\n  }\n});\n\n// Set name explicitly for when the code gets minified.\nStandardError.prototype.name = \"StandardError\";","map":{"version":3,"names":["has","Object","hasOwnProperty","proto","getPrototypeOf","trace","Error","captureStackTrace","module","exports","StandardError","msg","props","undefined","message","key","call","name","constructor","prototype","create","value","configurable","writable"],"sources":["/Users/petarjukic/Documents/Kriptovalute/Projekt/BlockExplorer/block_explorer/node_modules/standard-error/index.js"],"sourcesContent":["var has = Object.hasOwnProperty\nvar proto = Object.getPrototypeOf\nvar trace = Error.captureStackTrace\nmodule.exports = StandardError\n\nfunction StandardError(msg, props) {\n  // Let all properties be enumerable for easier serialization.\n  if (msg && typeof msg == \"object\") props = msg, msg = undefined\n  else this.message = msg\n\n  // Name has to be an own property (or on the prototype a single step up) for\n  // the stack to be printed with the correct name.\n  if (props) for (var key in props) this[key] = props[key]\n  if (!has.call(this, \"name\"))\n    this.name = has.call(proto(this), \"name\")? this.name : this.constructor.name\n\n  if (trace && !(\"stack\" in this)) trace(this, this.constructor)\n}\n\nStandardError.prototype = Object.create(Error.prototype, {\n  constructor: {value: StandardError, configurable: true, writable: true}\n})\n\n// Set name explicitly for when the code gets minified.\nStandardError.prototype.name = \"StandardError\"\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,MAAM,CAACC,cAAc;AAC/B,IAAIC,KAAK,GAAGF,MAAM,CAACG,cAAc;AACjC,IAAIC,KAAK,GAAGC,KAAK,CAACC,iBAAiB;AACnCC,MAAM,CAACC,OAAO,GAAGC,aAAa;AAE9B,SAASA,aAAa,CAACC,GAAG,EAAEC,KAAK,EAAE;EACjC;EACA,IAAID,GAAG,IAAI,OAAOA,GAAG,IAAI,QAAQ,EAAEC,KAAK,GAAGD,GAAG,EAAEA,GAAG,GAAGE,SAAS,MAC1D,IAAI,CAACC,OAAO,GAAGH,GAAG;;EAEvB;EACA;EACA,IAAIC,KAAK,EAAE,KAAK,IAAIG,GAAG,IAAIH,KAAK,EAAE,IAAI,CAACG,GAAG,CAAC,GAAGH,KAAK,CAACG,GAAG,CAAC;EACxD,IAAI,CAACf,GAAG,CAACgB,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,EACzB,IAAI,CAACC,IAAI,GAAGjB,GAAG,CAACgB,IAAI,CAACb,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,GAAE,IAAI,CAACc,IAAI,GAAG,IAAI,CAACC,WAAW,CAACD,IAAI;EAE9E,IAAIZ,KAAK,IAAI,EAAE,OAAO,IAAI,IAAI,CAAC,EAAEA,KAAK,CAAC,IAAI,EAAE,IAAI,CAACa,WAAW,CAAC;AAChE;AAEAR,aAAa,CAACS,SAAS,GAAGlB,MAAM,CAACmB,MAAM,CAACd,KAAK,CAACa,SAAS,EAAE;EACvDD,WAAW,EAAE;IAACG,KAAK,EAAEX,aAAa;IAAEY,YAAY,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAI;AACxE,CAAC,CAAC;;AAEF;AACAb,aAAa,CAACS,SAAS,CAACF,IAAI,GAAG,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}