{"ast":null,"code":"var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\nvar bufferFrom = require('buffer-from');\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param {NodeModule} mod\n * @param {string} request\n */\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\nfunction isInBrowser() {\n  if (environment === \"browser\") return true;\n  if (environment === \"node\") return false;\n  return typeof window !== 'undefined' && typeof XMLHttpRequest === 'function' && !(window.require && window.module && window.process && window.process.type === \"renderer\");\n}\nfunction hasGlobalProcessEventEmitter() {\n  return typeof process === 'object' && process !== null && typeof process.on === 'function';\n}\nfunction globalProcessVersion() {\n  if (typeof process === 'object' && process !== null) {\n    return process.version;\n  } else {\n    return '';\n  }\n}\nfunction globalProcessStderr() {\n  if (typeof process === 'object' && process !== null) {\n    return process.stderr;\n  }\n}\nfunction globalProcessExit(code) {\n  if (typeof process === 'object' && process !== null && typeof process.exit === 'function') {\n    return process.exit(code);\n  }\n}\nfunction handlerExec(list) {\n  return function (arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\nvar retrieveFile = handlerExec(retrieveFileHandlers);\nretrieveFileHandlers.push(function (path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function (protocol, drive) {\n      return drive ? '' :\n      // file:///C:/dir/file -> C:/dir/file\n      '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n  if (isInBrowser()) {\n    try {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', source, false);\n      xhr.send(null);\n      fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n      // Support providing a sourceMappingURL via the SourceMap header\n      var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") || xhr.getResponseHeader(\"X-SourceMap\");\n      if (sourceMapHeader) {\n        return sourceMapHeader;\n      }\n    } catch (e) {}\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n}\n;\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function (source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n  if (!sourceMapData) {\n    return null;\n  }\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function (source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' + position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \"; // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function (name) {\n    object[name] = /^(?:is|get)/.test(name) ? function () {\n      return frame[name].call(frame);\n    } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = {\n      nextPosition: null,\n      curPosition: null\n    };\n  }\n  if (frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(globalProcessVersion()) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function () {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function () {\n      return position.source;\n    };\n    frame.getLineNumber = function () {\n      return position.line;\n    };\n    frame.getColumnNumber = function () {\n      return position.column + 1;\n    };\n    frame.getScriptNameOrSourceURL = function () {\n      return position.source;\n    };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function () {\n      return origin;\n    };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n  var state = {\n    nextPosition: null,\n    curPosition: null\n  };\n  var processedStack = [];\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' + new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\nfunction printErrorAndExit(error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  var stderr = globalProcessStderr();\n  if (stderr && stderr._handle && stderr._handle.setBlocking) {\n    stderr._handle.setBlocking(true);\n  }\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n  console.error(error.stack);\n  globalProcessExit(1);\n}\nfunction shimEmitUncaughtException() {\n  var origEmit = process.emit;\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = arguments[1] && arguments[1].stack;\n      var hasListeners = this.listeners(type).length > 0;\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n    return origEmit.apply(this, arguments);\n  };\n}\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\nexports.install = function (options) {\n  options = options || {};\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\");\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    // Use dynamicRequire to avoid including in browser bundles\n    var Module = dynamicRequire(module, 'module');\n    var $compile = Module.prototype._compile;\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function (content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ? options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ? options.handleUncaughtExceptions : true;\n\n    // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch (e) {}\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\nexports.resetRetrieveHandlers = function () {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n};","map":{"version":3,"names":["SourceMapConsumer","require","path","fs","existsSync","readFileSync","err","bufferFrom","dynamicRequire","mod","request","errorFormatterInstalled","uncaughtShimInstalled","emptyCacheBetweenOperations","environment","fileContentsCache","sourceMapCache","reSourceMap","retrieveFileHandlers","retrieveMapHandlers","isInBrowser","window","XMLHttpRequest","module","process","type","hasGlobalProcessEventEmitter","on","globalProcessVersion","version","globalProcessStderr","stderr","globalProcessExit","code","exit","handlerExec","list","arg","i","length","ret","retrieveFile","push","trim","test","replace","protocol","drive","contents","xhr","open","send","readyState","status","responseText","er","supportRelativeURL","file","url","dir","dirname","match","exec","startPath","slice","resolve","retrieveSourceMapURL","source","fileData","sourceMapHeader","getResponseHeader","e","re","lastMatch","retrieveSourceMap","sourceMappingURL","sourceMapData","rawData","indexOf","toString","map","mapSourcePosition","position","sourceMap","urlAndMap","sourcesContent","sources","forEach","originalPositionFor","originalPosition","mapEvalOrigin","origin","line","column","CallSiteToString","fileName","fileLocation","isNative","getScriptNameOrSourceURL","isEval","getEvalOrigin","lineNumber","getLineNumber","columnNumber","getColumnNumber","functionName","getFunctionName","addSuffix","isConstructor","isMethodCall","isToplevel","typeName","getTypeName","methodName","getMethodName","cloneCallSite","frame","object","Object","getOwnPropertyNames","getPrototypeOf","name","call","wrapCallSite","state","undefined","nextPosition","curPosition","getFileName","noHeader","headerLength","originalFunctionName","prepareStackTrace","error","stack","message","errorString","processedStack","reverse","join","getErrorSource","split","Array","printErrorAndExit","_handle","setBlocking","console","shimEmitUncaughtException","origEmit","emit","hasStack","arguments","hasListeners","listeners","apply","originalRetrieveFileHandlers","originalRetrieveMapHandlers","exports","install","options","Error","overrideRetrieveFile","unshift","overrideRetrieveSourceMap","hookRequire","Module","$compile","prototype","_compile","__sourceMapSupport","content","filename","installHandler","handleUncaughtExceptions","worker_threads","isMainThread","resetRetrieveHandlers"],"sources":["/Users/petarjukic/Documents/Kriptovalute/Projekt/BlockExplorer/block_explorer/node_modules/source-map-support/source-map-support.js"],"sourcesContent":["var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\n\nvar fs;\ntry {\n  fs = require('fs');\n  if (!fs.existsSync || !fs.readFileSync) {\n    // fs doesn't have all methods we need\n    fs = null;\n  }\n} catch (err) {\n  /* nop */\n}\n\nvar bufferFrom = require('buffer-from');\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param {NodeModule} mod\n * @param {string} request\n */\nfunction dynamicRequire(mod, request) {\n  return mod.require(request);\n}\n\n// Only install once if called multiple times\nvar errorFormatterInstalled = false;\nvar uncaughtShimInstalled = false;\n\n// If true, the caches are reset before a stack trace formatting operation\nvar emptyCacheBetweenOperations = false;\n\n// Supports {browser, node, auto}\nvar environment = \"auto\";\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\n// Priority list of retrieve handlers\nvar retrieveFileHandlers = [];\nvar retrieveMapHandlers = [];\n\nfunction isInBrowser() {\n  if (environment === \"browser\")\n    return true;\n  if (environment === \"node\")\n    return false;\n  return ((typeof window !== 'undefined') && (typeof XMLHttpRequest === 'function') && !(window.require && window.module && window.process && window.process.type === \"renderer\"));\n}\n\nfunction hasGlobalProcessEventEmitter() {\n  return ((typeof process === 'object') && (process !== null) && (typeof process.on === 'function'));\n}\n\nfunction globalProcessVersion() {\n  if ((typeof process === 'object') && (process !== null)) {\n    return process.version;\n  } else {\n    return '';\n  }\n}\n\nfunction globalProcessStderr() {\n  if ((typeof process === 'object') && (process !== null)) {\n    return process.stderr;\n  }\n}\n\nfunction globalProcessExit(code) {\n  if ((typeof process === 'object') && (process !== null) && (typeof process.exit === 'function')) {\n    return process.exit(code);\n  }\n}\n\nfunction handlerExec(list) {\n  return function(arg) {\n    for (var i = 0; i < list.length; i++) {\n      var ret = list[i](arg);\n      if (ret) {\n        return ret;\n      }\n    }\n    return null;\n  };\n}\n\nvar retrieveFile = handlerExec(retrieveFileHandlers);\n\nretrieveFileHandlers.push(function(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (!fs) {\n      // Use SJAX if we are in the browser\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', path, /** async */ false);\n      xhr.send(null);\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        contents = xhr.responseText;\n      }\n    } else if (fs.existsSync(path)) {\n      // Otherwise, use the filesystem\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n});\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  if (isInBrowser()) {\n     try {\n       var xhr = new XMLHttpRequest();\n       xhr.open('GET', source, false);\n       xhr.send(null);\n       fileData = xhr.readyState === 4 ? xhr.responseText : null;\n\n       // Support providing a sourceMappingURL via the SourceMap header\n       var sourceMapHeader = xhr.getResponseHeader(\"SourceMap\") ||\n                             xhr.getResponseHeader(\"X-SourceMap\");\n       if (sourceMapHeader) {\n         return sourceMapHeader;\n       }\n     } catch (e) {\n     }\n  }\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][\\s]*sourceMappingURL=([^\\s'\"]+)[\\s]*$)|(?:\\/\\*[@#][\\s]*sourceMappingURL=([^\\s*'\"]+)[\\s]*(?:\\*\\/)[\\s]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while (match = re.exec(fileData)) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n};\n\n// Can be overridden by the retrieveSourceMap option to install. Takes a\n// generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nvar retrieveSourceMap = handlerExec(retrieveMapHandlers);\nretrieveMapHandlers.push(function(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = bufferFrom(rawData, \"base64\").toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n});\n\nfunction mapSourcePosition(position) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\n// Parses code generated by FormatEvalOrigin(), a function inside V8:\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js\nfunction mapEvalOrigin(origin) {\n  // Most eval() calls are in this format\n  var match = /^eval at ([^(]+) \\((.+):(\\d+):(\\d+)\\)$/.exec(origin);\n  if (match) {\n    var position = mapSourcePosition({\n      source: match[2],\n      line: +match[3],\n      column: match[4] - 1\n    });\n    return 'eval at ' + match[1] + ' (' + position.source + ':' +\n      position.line + ':' + (position.column + 1) + ')';\n  }\n\n  // Parse nested eval() calls using recursion\n  match = /^eval at ([^(]+) \\((.+)\\)$/.exec(origin);\n  if (match) {\n    return 'eval at ' + match[1] + ' (' + mapEvalOrigin(match[2]) + ')';\n  }\n\n  // Make sure we still return useful information if we didn't find anything\n  return origin;\n}\n\n// This is copied almost verbatim from the V8 source code at\n// https://code.google.com/p/v8/source/browse/trunk/src/messages.js. The\n// implementation of wrapCallSite() used to just forward to the actual source\n// code of CallSite.prototype.toString but unfortunately a new release of V8\n// did something to the prototype chain and broke the shim. The only fix I\n// could find was copy/paste.\nfunction CallSiteToString() {\n  var fileName;\n  var fileLocation = \"\";\n  if (this.isNative()) {\n    fileLocation = \"native\";\n  } else {\n    fileName = this.getScriptNameOrSourceURL();\n    if (!fileName && this.isEval()) {\n      fileLocation = this.getEvalOrigin();\n      fileLocation += \", \";  // Expecting source position to follow.\n    }\n\n    if (fileName) {\n      fileLocation += fileName;\n    } else {\n      // Source code does not originate from a file and is not native, but we\n      // can still get the source position inside the source string, e.g. in\n      // an eval string.\n      fileLocation += \"<anonymous>\";\n    }\n    var lineNumber = this.getLineNumber();\n    if (lineNumber != null) {\n      fileLocation += \":\" + lineNumber;\n      var columnNumber = this.getColumnNumber();\n      if (columnNumber) {\n        fileLocation += \":\" + columnNumber;\n      }\n    }\n  }\n\n  var line = \"\";\n  var functionName = this.getFunctionName();\n  var addSuffix = true;\n  var isConstructor = this.isConstructor();\n  var isMethodCall = !(this.isToplevel() || isConstructor);\n  if (isMethodCall) {\n    var typeName = this.getTypeName();\n    // Fixes shim to be backward compatable with Node v0 to v4\n    if (typeName === \"[object Object]\") {\n      typeName = \"null\";\n    }\n    var methodName = this.getMethodName();\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) != 0) {\n        line += typeName + \".\";\n      }\n      line += functionName;\n      if (methodName && functionName.indexOf(\".\" + methodName) != functionName.length - methodName.length - 1) {\n        line += \" [as \" + methodName + \"]\";\n      }\n    } else {\n      line += typeName + \".\" + (methodName || \"<anonymous>\");\n    }\n  } else if (isConstructor) {\n    line += \"new \" + (functionName || \"<anonymous>\");\n  } else if (functionName) {\n    line += functionName;\n  } else {\n    line += fileLocation;\n    addSuffix = false;\n  }\n  if (addSuffix) {\n    line += \" (\" + fileLocation + \")\";\n  }\n  return line;\n}\n\nfunction cloneCallSite(frame) {\n  var object = {};\n  Object.getOwnPropertyNames(Object.getPrototypeOf(frame)).forEach(function(name) {\n    object[name] = /^(?:is|get)/.test(name) ? function() { return frame[name].call(frame); } : frame[name];\n  });\n  object.toString = CallSiteToString;\n  return object;\n}\n\nfunction wrapCallSite(frame, state) {\n  // provides interface backward compatibility\n  if (state === undefined) {\n    state = { nextPosition: null, curPosition: null }\n  }\n  if(frame.isNative()) {\n    state.curPosition = null;\n    return frame;\n  }\n\n  // Most call sites will return the source file from getFileName(), but code\n  // passed to eval() ending in \"//# sourceURL=...\" will return the source file\n  // from getScriptNameOrSourceURL() instead\n  var source = frame.getFileName() || frame.getScriptNameOrSourceURL();\n  if (source) {\n    var line = frame.getLineNumber();\n    var column = frame.getColumnNumber() - 1;\n\n    // Fix position in Node where some (internal) code is prepended.\n    // See https://github.com/evanw/node-source-map-support/issues/36\n    // Header removed in node at ^10.16 || >=11.11.0\n    // v11 is not an LTS candidate, we can just test the one version with it.\n    // Test node versions for: 10.16-19, 10.20+, 12-19, 20-99, 100+, or 11.11\n    var noHeader = /^v(10\\.1[6-9]|10\\.[2-9][0-9]|10\\.[0-9]{3,}|1[2-9]\\d*|[2-9]\\d|\\d{3,}|11\\.11)/;\n    var headerLength = noHeader.test(globalProcessVersion()) ? 0 : 62;\n    if (line === 1 && column > headerLength && !isInBrowser() && !frame.isEval()) {\n      column -= headerLength;\n    }\n\n    var position = mapSourcePosition({\n      source: source,\n      line: line,\n      column: column\n    });\n    state.curPosition = position;\n    frame = cloneCallSite(frame);\n    var originalFunctionName = frame.getFunctionName;\n    frame.getFunctionName = function() {\n      if (state.nextPosition == null) {\n        return originalFunctionName();\n      }\n      return state.nextPosition.name || originalFunctionName();\n    };\n    frame.getFileName = function() { return position.source; };\n    frame.getLineNumber = function() { return position.line; };\n    frame.getColumnNumber = function() { return position.column + 1; };\n    frame.getScriptNameOrSourceURL = function() { return position.source; };\n    return frame;\n  }\n\n  // Code called using eval() needs special handling\n  var origin = frame.isEval() && frame.getEvalOrigin();\n  if (origin) {\n    origin = mapEvalOrigin(origin);\n    frame = cloneCallSite(frame);\n    frame.getEvalOrigin = function() { return origin; };\n    return frame;\n  }\n\n  // If we get here then we were unable to change the source position\n  return frame;\n}\n\n// This function is part of the V8 stack trace API, for more info see:\n// https://v8.dev/docs/stack-trace-api\nfunction prepareStackTrace(error, stack) {\n  if (emptyCacheBetweenOperations) {\n    fileContentsCache = {};\n    sourceMapCache = {};\n  }\n\n  var name = error.name || 'Error';\n  var message = error.message || '';\n  var errorString = name + \": \" + message;\n\n  var state = { nextPosition: null, curPosition: null };\n  var processedStack = [];\n  for (var i = stack.length - 1; i >= 0; i--) {\n    processedStack.push('\\n    at ' + wrapCallSite(stack[i], state));\n    state.nextPosition = state.curPosition;\n  }\n  state.curPosition = state.nextPosition = null;\n  return errorString + processedStack.reverse().join('');\n}\n\n// Generate position and snippet of original source with pointer\nfunction getErrorSource(error) {\n  var match = /\\n    at [^(]+ \\((.*):(\\d+):(\\d+)\\)/.exec(error.stack);\n  if (match) {\n    var source = match[1];\n    var line = +match[2];\n    var column = +match[3];\n\n    // Support the inline sourceContents inside the source map\n    var contents = fileContentsCache[source];\n\n    // Support files on disk\n    if (!contents && fs && fs.existsSync(source)) {\n      try {\n        contents = fs.readFileSync(source, 'utf8');\n      } catch (er) {\n        contents = '';\n      }\n    }\n\n    // Format the line from the original source code like node does\n    if (contents) {\n      var code = contents.split(/(?:\\r\\n|\\r|\\n)/)[line - 1];\n      if (code) {\n        return source + ':' + line + '\\n' + code + '\\n' +\n          new Array(column).join(' ') + '^';\n      }\n    }\n  }\n  return null;\n}\n\nfunction printErrorAndExit (error) {\n  var source = getErrorSource(error);\n\n  // Ensure error is printed synchronously and not truncated\n  var stderr = globalProcessStderr();\n  if (stderr && stderr._handle && stderr._handle.setBlocking) {\n    stderr._handle.setBlocking(true);\n  }\n\n  if (source) {\n    console.error();\n    console.error(source);\n  }\n\n  console.error(error.stack);\n  globalProcessExit(1);\n}\n\nfunction shimEmitUncaughtException () {\n  var origEmit = process.emit;\n\n  process.emit = function (type) {\n    if (type === 'uncaughtException') {\n      var hasStack = (arguments[1] && arguments[1].stack);\n      var hasListeners = (this.listeners(type).length > 0);\n\n      if (hasStack && !hasListeners) {\n        return printErrorAndExit(arguments[1]);\n      }\n    }\n\n    return origEmit.apply(this, arguments);\n  };\n}\n\nvar originalRetrieveFileHandlers = retrieveFileHandlers.slice(0);\nvar originalRetrieveMapHandlers = retrieveMapHandlers.slice(0);\n\nexports.wrapCallSite = wrapCallSite;\nexports.getErrorSource = getErrorSource;\nexports.mapSourcePosition = mapSourcePosition;\nexports.retrieveSourceMap = retrieveSourceMap;\n\nexports.install = function(options) {\n  options = options || {};\n\n  if (options.environment) {\n    environment = options.environment;\n    if ([\"node\", \"browser\", \"auto\"].indexOf(environment) === -1) {\n      throw new Error(\"environment \" + environment + \" was unknown. Available options are {auto, browser, node}\")\n    }\n  }\n\n  // Allow sources to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveFile) {\n    if (options.overrideRetrieveFile) {\n      retrieveFileHandlers.length = 0;\n    }\n\n    retrieveFileHandlers.unshift(options.retrieveFile);\n  }\n\n  // Allow source maps to be found by methods other than reading the files\n  // directly from disk.\n  if (options.retrieveSourceMap) {\n    if (options.overrideRetrieveSourceMap) {\n      retrieveMapHandlers.length = 0;\n    }\n\n    retrieveMapHandlers.unshift(options.retrieveSourceMap);\n  }\n\n  // Support runtime transpilers that include inline source maps\n  if (options.hookRequire && !isInBrowser()) {\n    // Use dynamicRequire to avoid including in browser bundles\n    var Module = dynamicRequire(module, 'module');\n    var $compile = Module.prototype._compile;\n\n    if (!$compile.__sourceMapSupport) {\n      Module.prototype._compile = function(content, filename) {\n        fileContentsCache[filename] = content;\n        sourceMapCache[filename] = undefined;\n        return $compile.call(this, content, filename);\n      };\n\n      Module.prototype._compile.__sourceMapSupport = true;\n    }\n  }\n\n  // Configure options\n  if (!emptyCacheBetweenOperations) {\n    emptyCacheBetweenOperations = 'emptyCacheBetweenOperations' in options ?\n      options.emptyCacheBetweenOperations : false;\n  }\n\n  // Install the error reformatter\n  if (!errorFormatterInstalled) {\n    errorFormatterInstalled = true;\n    Error.prepareStackTrace = prepareStackTrace;\n  }\n\n  if (!uncaughtShimInstalled) {\n    var installHandler = 'handleUncaughtExceptions' in options ?\n      options.handleUncaughtExceptions : true;\n\n    // Do not override 'uncaughtException' with our own handler in Node.js\n    // Worker threads. Workers pass the error to the main thread as an event,\n    // rather than printing something to stderr and exiting.\n    try {\n      // We need to use `dynamicRequire` because `require` on it's own will be optimized by WebPack/Browserify.\n      var worker_threads = dynamicRequire(module, 'worker_threads');\n      if (worker_threads.isMainThread === false) {\n        installHandler = false;\n      }\n    } catch(e) {}\n\n    // Provide the option to not install the uncaught exception handler. This is\n    // to support other uncaught exception handlers (in test frameworks, for\n    // example). If this handler is not installed and there are no other uncaught\n    // exception handlers, uncaught exceptions will be caught by node's built-in\n    // exception handler and the process will still be terminated. However, the\n    // generated JavaScript code will be shown above the stack trace instead of\n    // the original source code.\n    if (installHandler && hasGlobalProcessEventEmitter()) {\n      uncaughtShimInstalled = true;\n      shimEmitUncaughtException();\n    }\n  }\n};\n\nexports.resetRetrieveHandlers = function() {\n  retrieveFileHandlers.length = 0;\n  retrieveMapHandlers.length = 0;\n\n  retrieveFileHandlers = originalRetrieveFileHandlers.slice(0);\n  retrieveMapHandlers = originalRetrieveMapHandlers.slice(0);\n\n  retrieveSourceMap = handlerExec(retrieveMapHandlers);\n  retrieveFile = handlerExec(retrieveFileHandlers);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}