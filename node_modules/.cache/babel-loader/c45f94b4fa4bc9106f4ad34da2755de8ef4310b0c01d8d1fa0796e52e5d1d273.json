{"ast":null,"code":"/**\n * Module dependencies.\n */\n\nconst {\n  obfuscate\n} = require('./request-obfuscator');\nconst request = require('request');\nconst requestLogger = require('@uphold/request-logger');\n\n/**\n * Exports.\n */\n\nmodule.exports = logger => requestLogger(request, (request, instance) => {\n  obfuscate(request, instance);\n  if (request.type === 'response') {\n    return logger.debug({\n      request\n    }, `Received response for request ${request.id}`);\n  }\n  return logger.debug({\n    request\n  }, `Making request ${request.id} to ${request.method} ${request.uri}`);\n});","map":{"version":3,"names":["obfuscate","require","request","requestLogger","module","exports","logger","instance","type","debug","id","method","uri"],"sources":["/Users/petarjukic/Documents/Kriptovalute/Projekt/BlockExplorer/block_explorer/node_modules/bitcoin-core/src/logging/request-logger.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nconst { obfuscate } = require('./request-obfuscator');\nconst request = require('request');\nconst requestLogger = require('@uphold/request-logger');\n\n/**\n * Exports.\n */\n\nmodule.exports = logger => requestLogger(request, (request, instance) => {\n  obfuscate(request, instance);\n\n  if (request.type === 'response') {\n    return logger.debug({ request }, `Received response for request ${request.id}`);\n  }\n\n  return logger.debug({ request }, `Making request ${request.id} to ${request.method} ${request.uri}`);\n});\n"],"mappings":"AACA;AACA;AACA;;AAEA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACrD,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,aAAa,GAAGF,OAAO,CAAC,wBAAwB,CAAC;;AAEvD;AACA;AACA;;AAEAG,MAAM,CAACC,OAAO,GAAGC,MAAM,IAAIH,aAAa,CAACD,OAAO,EAAE,CAACA,OAAO,EAAEK,QAAQ,KAAK;EACvEP,SAAS,CAACE,OAAO,EAAEK,QAAQ,CAAC;EAE5B,IAAIL,OAAO,CAACM,IAAI,KAAK,UAAU,EAAE;IAC/B,OAAOF,MAAM,CAACG,KAAK,CAAC;MAAEP;IAAQ,CAAC,EAAG,iCAAgCA,OAAO,CAACQ,EAAG,EAAC,CAAC;EACjF;EAEA,OAAOJ,MAAM,CAACG,KAAK,CAAC;IAAEP;EAAQ,CAAC,EAAG,kBAAiBA,OAAO,CAACQ,EAAG,OAAMR,OAAO,CAACS,MAAO,IAAGT,OAAO,CAACU,GAAI,EAAC,CAAC;AACtG,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}