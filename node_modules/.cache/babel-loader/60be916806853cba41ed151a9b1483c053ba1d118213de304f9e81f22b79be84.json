{"ast":null,"code":"'use strict';\n\n/**\n * Module dependencies.\n */\nconst fs = require('fs');\nconst vm = require('vm');\n\n/**\n * Proxy reference.\n */\n\nlet Proxy = global.Proxy;\n\n/**\n * Workaround to avoid mutating `global.Proxy`.\n */\n\nif (!Proxy) {\n  const context = {\n    self: {}\n  };\n  vm.runInNewContext(fs.readFileSync(`${__dirname}/../vendor/proxy-polyfill.js`).toString(), context);\n  Proxy = context.self.Proxy;\n}\n\n/**\n * Exports.\n */\n\nmodule.exports = Proxy;","map":{"version":3,"names":["fs","require","vm","Proxy","global","context","self","runInNewContext","readFileSync","__dirname","toString","module","exports"],"sources":["/Users/petarjukic/Documents/Kriptovalute/Projekt/BlockExplorer/block_explorer/node_modules/@uphold/request-logger/src/proxy.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst fs = require('fs');\nconst vm = require('vm');\n\n/**\n * Proxy reference.\n */\n\nlet Proxy = global.Proxy;\n\n/**\n * Workaround to avoid mutating `global.Proxy`.\n */\n\nif (!Proxy) {\n  const context = { self: {} };\n\n  vm.runInNewContext(fs.readFileSync(`${__dirname}/../vendor/proxy-polyfill.js`).toString(), context);\n\n  Proxy = context.self.Proxy;\n}\n\n/**\n * Exports.\n */\n\nmodule.exports = Proxy;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;;AAExB;AACA;AACA;;AAEA,IAAIE,KAAK,GAAGC,MAAM,CAACD,KAAK;;AAExB;AACA;AACA;;AAEA,IAAI,CAACA,KAAK,EAAE;EACV,MAAME,OAAO,GAAG;IAAEC,IAAI,EAAE,CAAC;EAAE,CAAC;EAE5BJ,EAAE,CAACK,eAAe,CAACP,EAAE,CAACQ,YAAY,CAAE,GAAEC,SAAU,8BAA6B,CAAC,CAACC,QAAQ,EAAE,EAAEL,OAAO,CAAC;EAEnGF,KAAK,GAAGE,OAAO,CAACC,IAAI,CAACH,KAAK;AAC5B;;AAEA;AACA;AACA;;AAEAQ,MAAM,CAACC,OAAO,GAAGT,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}