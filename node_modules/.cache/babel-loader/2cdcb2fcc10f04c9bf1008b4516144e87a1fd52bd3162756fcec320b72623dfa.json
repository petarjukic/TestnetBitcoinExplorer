{"ast":null,"code":"var DTraceProvider;\nfunction DTraceProviderStub() {}\nDTraceProviderStub.prototype.addProbe = function (name) {\n  var p = {\n    'fire': function () {}\n  };\n  this[name] = p;\n  return p;\n};\nDTraceProviderStub.prototype.enable = function () {};\nDTraceProviderStub.prototype.fire = function () {};\nDTraceProviderStub.prototype.disable = function () {};\nvar builds = ['Release', 'default', 'Debug'];\nvar err = null;\nfor (var i = 0; i < builds.length; i++) {\n  try {\n    var binding = require('./src/build/' + builds[i] + '/DTraceProviderBindings');\n    DTraceProvider = binding.DTraceProvider;\n    break;\n  } catch (e) {\n    if (err === null) {\n      err = e;\n    }\n  }\n}\nif (!DTraceProvider) {\n  if (process.env.NODE_DTRACE_PROVIDER_REQUIRE === 'hard') {\n    throw err;\n  } else {\n    DTraceProvider = DTraceProviderStub;\n  }\n}\nexports.DTraceProvider = DTraceProvider;\nexports.createDTraceProvider = function (name, module) {\n  if (arguments.length == 2) return new exports.DTraceProvider(name, module);\n  return new exports.DTraceProvider(name);\n};","map":{"version":3,"names":["DTraceProvider","DTraceProviderStub","prototype","addProbe","name","p","enable","fire","disable","builds","err","i","length","binding","require","e","process","env","NODE_DTRACE_PROVIDER_REQUIRE","exports","createDTraceProvider","module","arguments"],"sources":["/Users/petarjukic/Documents/Kriptovalute/Projekt/BlockExplorer/block_explorer/node_modules/dtrace-provider/dtrace-provider.js"],"sourcesContent":["var DTraceProvider;\n\nfunction DTraceProviderStub() {}\nDTraceProviderStub.prototype.addProbe = function(name) {\n    var p = { 'fire': function () {} };\n    this[name] = p;\n    return (p);\n};\nDTraceProviderStub.prototype.enable = function() {};\nDTraceProviderStub.prototype.fire = function() {};\nDTraceProviderStub.prototype.disable = function() {};\n\nvar builds = ['Release', 'default', 'Debug'];\nvar err = null;\n\nfor (var i = 0; i < builds.length; i++) {\n    try {\n        var binding = require('./src/build/' + builds[i] + '/DTraceProviderBindings');\n        DTraceProvider = binding.DTraceProvider;\n        break;\n    } catch (e) {\n        if (err === null) {\n            err = e;\n        }\n    }\n}\n\nif (!DTraceProvider) {\n    if (process.env.NODE_DTRACE_PROVIDER_REQUIRE === 'hard') {\n        throw err;\n    } else {\n        DTraceProvider = DTraceProviderStub;\n    }\n}\n\nexports.DTraceProvider = DTraceProvider;\nexports.createDTraceProvider = function(name, module) {\n    if (arguments.length == 2)\n        return (new exports.DTraceProvider(name, module));\n    return (new exports.DTraceProvider(name));\n};\n"],"mappings":"AAAA,IAAIA,cAAc;AAElB,SAASC,kBAAkB,GAAG,CAAC;AAC/BA,kBAAkB,CAACC,SAAS,CAACC,QAAQ,GAAG,UAASC,IAAI,EAAE;EACnD,IAAIC,CAAC,GAAG;IAAE,MAAM,EAAE,YAAY,CAAC;EAAE,CAAC;EAClC,IAAI,CAACD,IAAI,CAAC,GAAGC,CAAC;EACd,OAAQA,CAAC;AACb,CAAC;AACDJ,kBAAkB,CAACC,SAAS,CAACI,MAAM,GAAG,YAAW,CAAC,CAAC;AACnDL,kBAAkB,CAACC,SAAS,CAACK,IAAI,GAAG,YAAW,CAAC,CAAC;AACjDN,kBAAkB,CAACC,SAAS,CAACM,OAAO,GAAG,YAAW,CAAC,CAAC;AAEpD,IAAIC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC;AAC5C,IAAIC,GAAG,GAAG,IAAI;AAEd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;EACpC,IAAI;IACA,IAAIE,OAAO,GAAGC,OAAO,CAAC,cAAc,GAAGL,MAAM,CAACE,CAAC,CAAC,GAAG,yBAAyB,CAAC;IAC7EX,cAAc,GAAGa,OAAO,CAACb,cAAc;IACvC;EACJ,CAAC,CAAC,OAAOe,CAAC,EAAE;IACR,IAAIL,GAAG,KAAK,IAAI,EAAE;MACdA,GAAG,GAAGK,CAAC;IACX;EACJ;AACJ;AAEA,IAAI,CAACf,cAAc,EAAE;EACjB,IAAIgB,OAAO,CAACC,GAAG,CAACC,4BAA4B,KAAK,MAAM,EAAE;IACrD,MAAMR,GAAG;EACb,CAAC,MAAM;IACHV,cAAc,GAAGC,kBAAkB;EACvC;AACJ;AAEAkB,OAAO,CAACnB,cAAc,GAAGA,cAAc;AACvCmB,OAAO,CAACC,oBAAoB,GAAG,UAAShB,IAAI,EAAEiB,MAAM,EAAE;EAClD,IAAIC,SAAS,CAACV,MAAM,IAAI,CAAC,EACrB,OAAQ,IAAIO,OAAO,CAACnB,cAAc,CAACI,IAAI,EAAEiB,MAAM,CAAC;EACpD,OAAQ,IAAIF,OAAO,CAACnB,cAAc,CAACI,IAAI,CAAC;AAC5C,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}